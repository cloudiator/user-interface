/**
 * Cloudiator REST Api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2.0
 * Contact: daniel.baur@uni-ulm.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { OperatingSystem } from './operatingSystem';
import { TaskInterface } from './taskInterface';
/**
 * Part of a task. Subtype of TaskInterface.
 */
export interface LanceInterface extends TaskInterface {
    /**
     * The container type that lance should use. Can be DOCKER to force a docker deployment, NATIVE to force a plain container deployment or BOTH to let the system derive the container type.
     */
    containerType?: LanceInterface.ContainerTypeEnum;
    /**
     * Describes the operating system required by this interface. If container type is set to NATIVE, this describes the OS required by the scripts, of container type is set to DOCKER, this describes the OS used to spawn the docker container.
     */
    operatingSystem?: OperatingSystem;
    /**
     * Initialization action.
     */
    init?: string;
    /**
     * Executed before installation action. Can be e.g. used for downloading binaries.
     */
    preInstall?: string;
    /**
     * Used for installing the application.
     */
    install?: string;
    /**
     * Used for configuration of the application component. First action where Lance environment variables are set.
     */
    postInstall?: string;
    /**
     * Called before starting the application. Can be e.g. used for configuration an environment.
     */
    preStart?: string;
    /**
     * Starts the component. Needs to return for PlainContainer and not return for Docker.
     */
    start?: string;
    /**
     * Detects the start of the application. Required if the application does not start instantianous.
     */
    startDetection?: string;
    /**
     * Checks if the application has stopped. Is periodically checked to detect a crash of the application.
     */
    stopDetection?: string;
    /**
     * Executed after the application has successfully started.
     */
    postStart?: string;
    /**
     * Called before the application is stopped.
     */
    preStop?: string;
    /**
     * Stops the application.
     */
    stop?: string;
    /**
     * Executed after the application is successfully stopped.
     */
    postStop?: string;
    /**
     * Executed before the container is shutdown. Can be used to backup state.
     */
    shutdown?: string;
    /**
     * A script that is executed if a new instance of a downstream task is available.
     */
    updateAction?: string;
}
export declare namespace LanceInterface {
    type ContainerTypeEnum = 'NATIVE' | 'DOCKER' | 'BOTH';
    const ContainerTypeEnum: {
        NATIVE: ContainerTypeEnum;
        DOCKER: ContainerTypeEnum;
        BOTH: ContainerTypeEnum;
    };
}
