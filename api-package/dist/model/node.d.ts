/**
 * Cloudiator REST Api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2.0
 * Contact: daniel.baur@uni-ulm.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { IpAddress } from './ipAddress';
import { LoginCredential } from './loginCredential';
import { NodeProperties } from './nodeProperties';
/**
 * Representation of a node used by Cloudiator
 */
export interface Node {
    /**
     * Human-readable name for the node.
     */
    name?: string;
    loginCredential?: LoginCredential;
    /**
     * The public/private ip addresses under which this node is reachable.
     */
    ipAddresses?: Array<IpAddress>;
    /**
     * Further properties of this node.
     */
    nodeProperties?: NodeProperties;
    /**
     * Reason this node was created
     */
    reason?: string;
    /**
     * Diagnostic information about the node state
     */
    diagnostic?: string;
    /**
     * The node candidate this node was created from if applicable.
     */
    nodeCandidate?: string;
    /**
     * Unique identifier of this node.
     */
    id?: string;
    /**
     * Original id of this node. Is present of the node was created e.g. at a cloud provider.
     */
    originId?: string;
    /**
     * User id of the owner of this node.
     */
    userId?: string;
    /**
     * The type of this node.
     */
    nodeType?: Node.NodeTypeEnum;
    /**
     * The state the node is currently in.
     */
    state?: Node.StateEnum;
}
export declare namespace Node {
    type NodeTypeEnum = 'UNKNOWN_TYPE' | 'VM' | 'BYON' | 'CONTAINER' | 'FAAS';
    const NodeTypeEnum: {
        UNKNOWNTYPE: NodeTypeEnum;
        VM: NodeTypeEnum;
        BYON: NodeTypeEnum;
        CONTAINER: NodeTypeEnum;
        FAAS: NodeTypeEnum;
    };
    type StateEnum = 'PENDING' | 'RUNNING' | 'ERROR' | 'DELETED';
    const StateEnum: {
        PENDING: StateEnum;
        RUNNING: StateEnum;
        ERROR: StateEnum;
        DELETED: StateEnum;
    };
}
